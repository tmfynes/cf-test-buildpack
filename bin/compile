#!/usr/bin/env bash

echo "JBOSS5 prototype buildpack"
echo

BUILD_DIR=$1
CACHE_DIR=$2
BUILD_PACK_DIR=$(dirname $(dirname $0))

echo "All arguments [$@]"

echo "Downloading JBoss5"
if [ -f $CACHE_DIR/jboss5.zip ]; then
  echo "JBoss5.zip found in cache"
else
  wget -O $CACHE_DIR/jboss5.zip http://jboss5binary.fynesy.com/jboss-5.1.0.GA-jdk6.zip

fi

echo "Extracting JBoss5"
unzip $CACHE_DIR/jboss5.zip -d $BUILD_DIR

echo "Extracting jdk16"
cd $BUILD_DIR
mkdir jdk16
cd jdk16
tar zxvf $BUILDPACK_CACHE/openjdk-1.6.0_27.tar.gz

if [ ! -d "$BUILD_DIR" ]; then
  echo "Build directory [$BUILD_DIR] does not exist, creating"
  mkdir -p "$BUILD_DIR"
else
  echo "Build directory [$BUILD_DIR] exists"
fi

if [ ! -d "$CACHE_DIR" ]; then
  echo "Cache directory [$CACHE_DIR] does not exist, creating"
  mkdir -p "$CACHE_DIR"
else
  echo "Cache directory [$CACHE_DIR] exists"
fi

echo "The compile script is at [$0]"
echo "The build pack is situated at [$BUILD_PACK_DIR]"

echo "Listing Environment:"
env

cd ../
echo "Creating start script"
cat > "$BUILD_DIR/start.sh" << EOF
echo "Starting JBoss"
export JAVA_HOME=/home/vcap/app/jdk16
export PATH=\$PATH:\$JAVA_HOME/bin
export JBossHome=/home/vcap/app/jboss-5.1.0.GA
echo "Replacing default jboss http listen port 8080 with \$PORT"
sed -i "s/8080/\${PORT}/g" /home/vcap/app/jboss-5.1.0.GA/server/default/deploy/jbossweb.sar/server.xml
mv *.war jboss-5.1.0.GA/server/default/deploy/
mv *.ear jboss-5.1.0.GA/server/default/deploy/
\$JBossHome/bin/run.sh -c default -b 0.0.0.0 
EOF

cat > "$BUILD_DIR/start-debug.sh" <<EOF
#!/bin/bash
# Start Python Server
echo "Starting Web Server"
python /home/vcap/app/boot.py /

EOF
chmod 755 "$BUILD_DIR/start.sh"

echo "Creating script to start a small Python Web server"
cat > "$BUILD_DIR/boot.py" <<EOF

#!/usr/bin/env python
#
# Simple HTTP Server for accessing files in target director
#
import SimpleHTTPServer
import SocketServer
import os
import sys

if len(sys.argv) == 2:
    print 'Serving files from [%s]' % sys.argv[1]
    os.chdir(sys.argv[1])
else:
    print 'Service files from [%s]' % os.getcwd()

httpd = SocketServer.TCPServer(
    (os.environ.get('VCAP_APP_HOST', 'localhost'),
     int(os.environ.get('VCAP_APP_PORT', 8080))),
    SimpleHTTPServer.SimpleHTTPRequestHandler)
httpd.serve_forever()
EOF

